generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Job {
  ADVOGADO
  COMERCIARIO
  EMPRESARIO
  ESTUDANTE
  FUNCIONARIO_PUBLICO
  COMERCIANTE
  OUTROS
}

enum Role {
  ADMIN
  USER
}

enum Type {
  TRUE_FALSE
  MULTIPLE_CHOICE
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  job      Job    @default(ADVOGADO)
  role     Role   @default(USER)

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  forgotPassword forgotPassword[]

  @@map("users")
}

model Questions {
  id           String   @id @default(uuid())
  categoryId   String   @map("category_id")
  type         Type     @default(TRUE_FALSE)
  question     String
  choices      String[]
  category     Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  correctAwser String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("questions")
}

model Category {
  id        String      @id @default(cuid())
  name      String
  Questions Questions[] @ignore

  @@map("categories")
}

model forgotPassword {
  id      String   @id @default(cuid())
  token   String
  expires DateTime
  userId  String   @unique
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
